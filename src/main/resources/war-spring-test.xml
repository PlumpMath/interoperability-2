<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

<!-- 
	
	
	<util:properties id="keystorePropertiesClient">
		<prop key="org.apache.ws.security.crypto.provider">org.apache.ws.security.components.crypto.Merlin</prop>
		<prop key="org.apache.ws.security.crypto.merlin.keystore.type">jks</prop>
		<prop key="org.apache.ws.security.crypto.merlin.keystore.password">nosecret</prop>
		<prop key="org.apache.ws.security.crypto.merlin.keystore.alias">clientkey</prop>
		<prop key="org.apache.ws.security.crypto.merlin.file">C:/EntornoSimon/git/interoperability/client.keystore</prop>
		<prop key="org.apache.ws.security.crypto.merlin.truststore.file">C:/EntornoSimon/git/interoperability/client.keystore</prop>
		<prop key="org.apache.ws.security.crypto.merlin.truststore.password">nosecret</prop>
		<prop key="org.apache.ws.security.crypto.merlin.truststore.type">jks</prop>
	</util:properties>
		
	
	 -->

	<util:properties id="keystorePropertiesClient">
			<prop key="org.apache.ws.security.crypto.provider">org.apache.ws.security.components.crypto.Merlin</prop>
			<prop key="org.apache.ws.security.crypto.merlin.keystore.type">jks</prop>
			<prop key="org.apache.ws.security.crypto.merlin.keystore.password">nosecret</prop>
			<prop key="org.apache.ws.security.crypto.merlin.keystore.alias">clientkey</prop>
			<prop key="org.apache.ws.security.crypto.merlin.file">E:/java/git/jbossews/client.keystore</prop>
			<prop key="org.apache.ws.security.crypto.merlin.truststore.file">E:/java/git/jbossews/client.keystore</prop>
			<prop key="org.apache.ws.security.crypto.merlin.truststore.password">nosecret</prop>
			<prop key="org.apache.ws.security.crypto.merlin.truststore.type">jks</prop>
		</util:properties>
	
	
		<!-- 
		http://jbossews-interoperability.rhcloud.com/services/CardFraudulentServiceV3
		http://localhost:8181/interoperability/services/CardFraudulentServiceV3
		 -->
	<jaxws:client id="testClient" serviceClass="com.aes.service.accounts.CardFraudulentService"
		address="http://localhost:8181/interoperability/services/CardFraudulentServiceV3" wsdlLocation="/wsdl/services/CardFraudulentV3.wsdl"
		serviceName="s:CardFraudulentService" endpointName="s:CardFraudulentPort" xmlns:s="http://com/aes/service/accounts/CardFraudulent">
		<jaxws:properties>			        
			<entry key="ws-security.encryption.properties" value-ref="keystorePropertiesClient"/>
			<entry key="ws-security.signature.properties" value-ref="keystorePropertiesClient"/>
			<entry key="ws-security.encryption.username" value="serverkey"/>	
			 <entry key="ws-security.signature.username" value="clientkey"/>			 
      		  
      		<entry key="ws-security.callback-handler"  value="com.aes.service.accounts.security.ClientCallback"/>
			
		</jaxws:properties>
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
		</jaxws:outInterceptors>
	</jaxws:client>
	

 
	
	<!--
	http://25.31.25.12/BancoB_FraudesService/ConsultarFraudes.svc
	http://localhost:51339/ConsultarFraudes.svc 
	 -->
	<jaxws:client id="testClientConsultaFraudes" serviceClass="com.aes.service.accounts.fraudquery.IConsultarFraudes"
		address="http://25.31.25.12/BancoB_FraudesService/ConsultarFraudes.svc" wsdlLocation="/wsdl/services/ConsultarFraudes.svc"
		serviceName="s:ConsultarFraudes" endpointName="s:WSHttpBinding_IConsultarFraudes" xmlns:s="http://tempuri.org/">
		<jaxws:properties>			        
			<entry key="ws-security.encryption.properties" value-ref="keystorePropertiesClient"/>
			<entry key="ws-security.signature.properties" value-ref="keystorePropertiesClient"/>
			<entry key="ws-security.encryption.username" value="aesserverkey"/>	
			<!-- 				
			 <entry key="ws-security.signature.username" value="clientkey"/>			 
      		 -->
      		  
      		<entry key="ws-security.callback-handler"  value="com.aes.service.accounts.security.ClientCallback"/>
			
		</jaxws:properties>
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
		</jaxws:outInterceptors>
	</jaxws:client>
	

</beans>
